클라이언트 -> 요청 ---> 서버(Java 코드) ---> DB(Insert)

----> 서버 ---> 클라이언트

아직 DB를 안배웠으니까 .dat를 이용해서 Todo List 만들기!
inputstrem, outstream, 직렬화, 역직렬화...????

C:/servlet_todoList_data 폴더 생성하기(여기에 .dat 저장할거임!)

ctrl n : dynamic Web Project
Project name : TodoList
next + next

Context root 지우고 / 추가하기(최상위폴더로 경로 작성 쉽게하기 위해!)
체크박스 체크하기(web.xml 만드는거임)

JSP2 Project에 있는 lib 폴더에 있는 파일4개를 TodoList에 있는 lib 폴더에 집어넣기!

webapp 폴더 하위에 index.jsp 생성! (폴더 위치 주의)

css 파일 작성(일단은 강사님이 파일 올려줌!)

index.jsp에서부터 위임하기.... <%@ ~~~ %> 빼고 다 지운 후
<jsp:forward page="/main"/> 추가하기
-------------------------------------------------------------------
MVC 패턴
Model - vo/dto, service, dao(이번에 추가)
View - html, jsp
Controller -Servlet

(★★★)
클라이언트의 요청 -> Controller -> Service 호출 -> DAO 호출 -> DB/외부파일 접근
클라이언트 <- view <- Controller <- Service <- DAO <- DB/외부파일 처리  <┘

(역순과정을 거쳐 Controller -> 알맞은 view 선택 -> 클라이언트에게 응답)

위 틀은 Spring 끝날때까지 유지될 예정!
---------------------------------------------------------------------
1. 로그인(요청) - 아이디/비밀번호
2. Controller : 알맞은 요청처리를 매핑 후 Service에 전달
3. Service : 비밀번호 암호화에 관련된 로직 처리(데이터 가공) 후 DAO에 전달
4. DAO : 가공처리된 데이터를 DB에 전달
5. DB : 조회(아이디/비밀번호) -> 결과(O/X) 후 DAO에 반환
6. DAO : 반환받은 결과를 Service에 반환
7. Service : 반환받은 결과를 Controller에 반환
8. Controller : 반환받은 결과를 
--> 가입이 된 사람이면 view(메인페이지로) -> 클라이언트에게 전달
--> 가입이 안 된 사람이면 view(회원가입 페이지로) -> 클라이언트에게 전달

------------------------------------------------------------------------------
jsp 에서 jstl 사용할 때 맨 위에 붙여야할 구문
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
-------------------------------------------------------------------------------
추가사항 :
/todo/detail 요청 처리해줄 Servlet(Controller) 만들기
a 태그 요청은 Get
doGet() 오버라이딩
-> 쿼리스트링으로 넘어온 ?index=0 or ?index=1 ...
req.getParameter("index"); -> 무조건 String형이므로 정수형으로 변환 필요

// 1. 전달받은 파라미터 Integer.parseInt 이용하여 정수형으로 변환하기
int index = Integer.parseInt(req.getParameter("index"));

// 2. 상세 조회 서비스 호출 후 결과 반환 받기
Todo 객체 반환받기 -> 서비스 메서드 호출 시 구해온 index 전달
todoList 에는 Todo 객체가 여러개 있음!
꺼내와서 title, detail 정보 뽑아와서 상세조회 하는 JSP 파일에 뿌려주기

// 3. index 번째 Todo 객체가 존재하는 경우 detail.jsp로 forward 해서 응답
-> detail.jsp (request scope 세팅된 Todo 객체를 뿌려주는 일)